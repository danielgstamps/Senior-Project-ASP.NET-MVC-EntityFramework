@model CapstoneProject.Models.Question
<div>
    @Html.HiddenFor(x => x.QuestionID)
    @{
        var numberOffset = (int)TempData["numberOffset"];
        var number = Model.QuestionID - (Model.QuestionID - 1) + numberOffset;
    }
    <p> @number. @Model.QuestionText </p>
    @{
        string[] radioButtonLabels;
    }
    @if (Model.Category.TypeID == 1)
    {
        radioButtonLabels = new string[]
        {
            "Strongly Agree",
            "Agree",
            "Neutral",
            "Disagree",
            "Strongly Disagree"
        };
        for (var i = 0; i < 5; i++)
        {
            @Html.RadioButton(i.ToString(), Model.QuestionID) @: @Html.Label(radioButtonLabels[i]) <br>
        }
    }
    @*@if (Model.Category.TypeID == 2)
    {
        for (var i = 0; i < 10; i++)
        {
            @Html.RadioButton(i.ToString(), Model.QuestionID)
        }
    }*@
    @*<strong>@Html.Label("Agree")</strong>*@
</div> 