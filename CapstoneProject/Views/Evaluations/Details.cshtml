@model CapstoneProject.ViewModels.ViewEvalViewModel

@{
    ViewBag.Title = "Evaluation Details";
    var maxAnswerOption = Model.Eval.TypeID == 1 ? 5 : 10;
}

<h2>Evaluation Details</h2>
<h4>View the details of your evaluation, and see your answers.</h4>
<br/>

<div>   
    <table class="table">
        <tr>
            <th>
                @Html.DisplayNameFor(model => model.Eval.Type)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.Eval.Stage)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.Eval.OpenDate)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.Eval.CloseDate)
            </th>
            <th>
                <label>Self Status</label>
            </th>
            <th>
                Rater Status
            </th>
        </tr>
        <tr>
            <td>
                @Html.DisplayFor(model => model.Eval.Type.TypeName)
            </td>
            <td>
                @Html.DisplayFor(model => model.Eval.Stage.StageName)
            </td>
            <td>
                <label>@Model.Eval.OpenDate.ToString("d") </label>
            </td>
            <td>
                <label>@Model.Eval.CloseDate.Date.ToString("d")</label>
            </td>
            <td>
                @if (Model.Eval.CompletedDate.HasValue && !string.IsNullOrEmpty(Model.Eval.SelfAnswers))
                {
                    <label class="alert-success">Completed @Model.Eval.CompletedDate.Value.ToString("MM/dd/yyyy h:mm tt")</label>
                    if (Model.Eval.CloseDate <= DateTime.Today)
                    {
                        <br />
                        <label class="alert-warning">Closed @Model.Eval.CloseDate.Date.ToString("d")</label>
                    }
                }
            </td>
            <td>
                @if (Model.Eval.Raters.Count == 0)
                {
                    <label>N/A (No raters)</label>
                }
                else if (Model.Eval.Raters.Any(r => string.IsNullOrEmpty(r.Answers)))
                {
                    <label class="alert-warning">Rater evaluations in progress</label>
                    if (Model.Eval.CloseDate > DateTime.Today)
                    {
                        <label> | </label>
                        @Html.ActionLink("Edit/Notify", "EditRaters", new { id = Model.Eval.EvaluationID })
                    }
                }
                else
                {
                    <label class="alert-success">Complete</label>
                    if (Model.Eval.CloseDate > DateTime.Today)
                    {
                        <label> | </label>
                        @Html.ActionLink("Edit", "EditRaters", new { id = Model.Eval.EvaluationID })
                    }
                }
            </td>
        </tr>
    </table>
</div>
<div>
    <br/>
    <h2>Your Answers:</h2>
    <h4>On a scale from 1-@maxAnswerOption, (1 meaning disagree, @maxAnswerOption meaning agree), you answered the following:</h4>
    <br/>
    @for (var i = 0; i < Model.QuestionList.Count; i++)
    {
        if (i == 0)
        {
            <label class="alert-info h4">@Model.QuestionList[i].Category.Name</label><br />
        }
        else if (!Model.QuestionList[i].Category.Equals(Model.QuestionList[i - 1].Category))
        {
            <label class="alert-info h4">@Model.QuestionList[i].Category.Name</label><br />
        }

        <label>@Model.QuestionList[i].QuestionText</label>
        <br/>

        <label>You said: </label>
        <label>@Model.Answers[i] / @maxAnswerOption</label>
        <br/><br/>
    }
    @Html.ActionLink("Back to My Evaluations", "EmployeeEvalsIndex", new {id = Model.Eval.EmployeeID})
</div>


