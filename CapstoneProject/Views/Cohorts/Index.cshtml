@using CapstoneProject.HtmlExtensions
@model IEnumerable<CapstoneProject.Models.Cohort>

@{
    ViewBag.Title = "Cohort Index";
}

<h2>Cohorts</h2>
<h4>Manage your cohorts, and assign evaluations to them.</h4>
<h4 class="alert-success">@TempData["CreateSuccess"]</h4>
<h4 class="alert-success">@TempData["EditSuccess"]</h4>
<h4 class="alert-success">@TempData["EmailSuccess"]</h4>
<h4 class="alert-success">@TempData["DeleteSuccess"]</h4>
<h4>@Html.ActionLink("Add New Cohort", "Create")</h4>

<table class="table">
    <tr>
        <th>
            @Html.DisplayNameFor(model => model.Name)
        </th>
        <th>
            <label>Available Actions</label>
        </th>
        <th>
            <label>Cohort Status</label>
        </th>
        <th>
            <label>Evaluation Status</label>
        </th>
    </tr>

    @foreach (var item in Model)
    {
        <tr>
            <td>
                @Html.DisplayFor(modelItem => item.Name)
            </td>
            <td>
                @if (HtmlExtensions.CohortCanEvaluate(item))
                {
                    @Html.ActionLink("Evaluate", "Create", "Evaluations", new { cohortId = item.CohortID }, null)
                    <label> | </label>
                }

                @Html.ActionLink("View", "Details", new { id = item.CohortID })

                @if (!HtmlExtensions.CohortHasOpenEval(item, 1) && 
                    !HtmlExtensions.CohortHasOpenEval(item, 2) &&
                    !HtmlExtensions.CohortHasClosedEval(item, 1) &&
                    !(HtmlExtensions.CohortFinishedStage(item, "Baseline", 1) || HtmlExtensions.CohortFinishedStage(item, "Baseline", 2)))
                {
                    <label> | </label>
                    @Html.ActionLink("Edit", "Edit", new { id = item.CohortID })
                    <label> | </label>
                    @Html.ActionLink("Delete", "Delete", new { id = item.CohortID })
                }              
            </td>
            <td>
                @if (item.Employees.Count == 0)
                {
                    <label class="alert-warning">Empty</label>
                }
                else if (!item.Employees.All(e => e.EmailConfirmed))
                {
                    <label class="alert-warning">Contains Pending Accounts</label>
                }
                else if (HtmlExtensions.CohortFinishedStage(item, "Summative", 1) && 
                         HtmlExtensions.CohortFinishedStage(item, "Summative", 2))
                {
                    <label class="alert-success">Finished</label>
                }
                else if (HtmlExtensions.CohortLocked(item))
                {
                    <label class="alert-success">Locked - Evaluating</label>
                }
                else
                {
                    <label class="alert-info">Ready to Evaluate</label>
                }
            </td>
            <td>
                @if (HtmlExtensions.CohortFinishedType(item, 1))
                {
                    if (HtmlExtensions.CohortFinishedStage(item, "Summative", 1))
                    {
                        <label class="alert-success">Type 1 Summative Complete</label>
                    }
                    else if (HtmlExtensions.CohortFinishedStage(item, "Formative", 1))
                    {
                        <label class="alert-success">Type 1 Formative Complete</label>
                    }
                    else if (HtmlExtensions.CohortFinishedStage(item, "Baseline", 1))
                    {
                        <label class="alert-success">Type 1 Baseline Complete</label>
                    }
                    if (item.Type2Assigned || HtmlExtensions.CohortFinishedType(item, 2)){ <br /> }
                }

                else if (HtmlExtensions.CohortHasOpenEval(item, 1) && 
                         !HtmlExtensions.CohortFinishedType(item, 1))
                {
                    <label class="alert-info">Type 1 in progress</label>
                    <label> ( </label>
                    @Html.ActionLink("Notify", "NotifyCohort", new {cohortId = item.CohortID, typeId = 1})
                    <label> ) </label>
                    if (item.Type2Assigned || HtmlExtensions.CohortFinishedType(item, 2)){ <br /> }
                } 

                else if (item.Type1Assigned && 
                     !HtmlExtensions.CohortHasOpenEval(item, 1) && 
                     !HtmlExtensions.CohortHasClosedEval(item, 1) &&
                     !HtmlExtensions.CohortFinishedStage(item, "Summative", 1))
                {
                    <label class="alert-info">Type 1 opens @HtmlExtensions.CohortEvalOpenDate(item, 1)</label>
                    <label> ( </label>
                    @Html.ActionLink("Edit", "Edit", "Evaluations", new {cohortId = item.CohortID, typeId = 1}, null)
                    <label> | </label>
                    @Html.ActionLink("Delete", "Delete", "Evaluations", new {cohortId = item.CohortID, typeId = 1}, null)
                    <label> | </label>
                    @Html.ActionLink("Notify", "NotifyCohort", new {cohortId = item.CohortID, typeId = 1})
                    <label> ) </label>
                    if (item.Type2Assigned || HtmlExtensions.CohortFinishedType(item, 2)){ <br /> }
                }
                
                else if (HtmlExtensions.CohortHasClosedEval(item, 1))
                {
                    <label class="alert-warning">Type 1 closed @HtmlExtensions.CohortEvalCloseDate(item, 1)</label>
                    <label>(</label>
                    @Html.ActionLink("Edit", "Edit", "Evaluations", new { cohortId = item.CohortID, typeId = 1 }, null)
                    <label>)</label>
                }

                @if (HtmlExtensions.CohortFinishedType(item, 2))
                {
                    if (HtmlExtensions.CohortFinishedStage(item, "Summative", 2))
                    {
                        <label class="alert-success">Type 2 Summative Complete</label>
                    }
                    else if (HtmlExtensions.CohortFinishedStage(item, "Formative", 2))
                    {
                        <label class="alert-success">Type 2 Formative Complete</label>
                    }
                    else if (HtmlExtensions.CohortFinishedStage(item, "Baseline", 2))
                    {
                        <label class="alert-success">Type 2 Baseline Complete</label>
                    }
                }

                else if (HtmlExtensions.CohortHasOpenEval(item, 2) && 
                         !HtmlExtensions.CohortFinishedType(item, 2))
                {
                    <label class="alert-info">Type 2 in progress</label>
                    <label> ( </label>
                    @Html.ActionLink("Notify", "NotifyCohort", new { cohortId = item.CohortID, typeId = 2 })
                    <label> ) </label>
                }

                else if (item.Type2Assigned &&
                    !HtmlExtensions.CohortHasOpenEval(item, 2) &&
                    !HtmlExtensions.CohortHasClosedEval(item, 2) &&
                    !HtmlExtensions.CohortFinishedStage(item, "Summative", 2))
                {
                    <label class="alert-info">Type 2 opens @HtmlExtensions.CohortEvalOpenDate(item, 2)</label>
                    <label> ( </label>
                    @Html.ActionLink("Edit", "Edit", "Evaluations", new {cohortId = item.CohortID, typeId = 2}, null)
                    <label> | </label>
                    @Html.ActionLink("Delete", "Delete", "Evaluations", new {cohortId = item.CohortID, typeId = 2}, null)
                    <label> | </label>
                    @Html.ActionLink("Notify", "NotifyCohort", new { cohortId = item.CohortID, typeId = 2 })
                    <label> ) </label>
                }

                else if (HtmlExtensions.CohortHasClosedEval(item, 2))
                {
                    <label class="alert-warning">Type 2 closed @HtmlExtensions.CohortEvalCloseDate(item, 2)</label>
                    <label>(</label>
                    @Html.ActionLink("Edit", "Edit", "Evaluations", new { cohortId = item.CohortID, typeId = 2 }, null)
                    <label>)</label>
                }
            </td>
        </tr>
    }

</table>